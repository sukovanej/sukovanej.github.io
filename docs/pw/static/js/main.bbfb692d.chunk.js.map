{"version":3,"sources":["Settings.tsx","SearchResponseModelDecoder.ts","WhisperList.tsx","FormControlWhisperer.tsx","api.ts","SearchForm.tsx","Offer.tsx","Offers.tsx","Lizard.tsx","Snowflakes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BACKEND_URL_STORAGE_KEY","Settings","useState","window","localStorage","getItem","backendUrl","setBackendUrl","show","setShow","toLowerCase","includes","document","body","style","animationName","Button","variant","onClick","marginRight","Modal","onHide","Header","closeButton","Title","Body","Form","Group","className","controlId","Label","Control","type","placeholder","value","onChange","e","target","Footer","setItem","saveSettings","searchResponseDecoder","D","origin","destination","departure","arrival","searchResponseListDecoder","WhisperList","whisperList","length","dropDownItems","map","text","i","Dropdown","Item","eventKey","Menu","FormControlWhisperer","onFail","setWhisperList","onSuccess","data","apiUrl","axios","get","headers","accept","params","then","res","catch","whisper","l","onKeyDown","key","SearchForm","onSubmit","setOrigin","setDestination","setDeparture","fetchInProgress","onWhisperFail","buttonText","buttonVariant","as","Row","column","sm","Col","Offer","offer","Offers","offers","elements","src","alt","Lizard","position","id","backgroundImage","backgroundSize","animationPlayState","display","top","Snowflakes","count","color","width","height","zIndex","backgroundColor","cubeSolveStyle","backgroundPosition","cubeUnsolvedStyle","App","setOffers","lizardToggle","setLizardToggle","christmassEnabled","setChristmassEnabled","brnoEnabled","setBrnoEnabled","lizardPositions","setLizardPositions","addLizardIfToggled","addLizard","onclick","onkeydown","milan","setMilan","fetchState","setFetchState","errorMessage","setErrorMessage","cubeStyle","Math","random","concat","Container","margin","float","Alert","maxHeight","overflowY","decode","search","pipe","E","err","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bbfb692d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\n\nexport const BACKEND_URL_STORAGE_KEY = \"backendUrl\";\n\nfunction saveSettings(backendUrl: string): void {\n  window.localStorage.setItem(BACKEND_URL_STORAGE_KEY, backendUrl);\n}\n\nfunction setMilanAnimation() {\n  document.body.style.animationName = \"move\";\n}\n\nfunction unsetMilanAnimation() {\n  document.body.style.animationName = \"\";\n}\n\nexport default function Settings(): JSX.Element {\n  const [backendUrl, setBackendUrl] = useState<string>(\n    window.localStorage.getItem(BACKEND_URL_STORAGE_KEY) || \"\"\n  );\n  const [show, setShow] = useState(false);\n\n  const save = () => {\n    saveSettings(backendUrl);\n    setShow(false);\n  };\n\n  if (backendUrl.toLowerCase().includes(\"milan\")) {\n    setMilanAnimation()\n  } else {\n    unsetMilanAnimation()\n  }\n\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        onClick={() => setShow(true)}\n        style={{ marginRight: \"15px\" }}\n      >\n        Settings\n      </Button>\n\n      <Modal show={show} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"origin\">\n              <Form.Label>Backend URL</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"for example http://localhost:8080\"\n                value={backendUrl}\n                onChange={(e) => setBackendUrl(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={save}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import * as D from 'io-ts/Decoder';\n\nexport const searchResponseDecoder = D.struct({\n  origin: D.string,\n  destination: D.string,\n  departure: D.string,\n  arrival: D.string,\n});\n\nexport const searchResponseListDecoder = D.array(searchResponseDecoder);\n\nexport type SearchResponseItem = D.TypeOf<typeof searchResponseDecoder>;\nexport type SearchResponseList = D.TypeOf<typeof searchResponseListDecoder>;\n","import { Dropdown } from \"react-bootstrap\";\n\ninterface WhisperListProps {\n  whisperList: string[];\n  onClick: (_: string) => void;\n}\n\nexport default function WhisperList({\n  whisperList,\n  onClick,\n}: WhisperListProps) {\n  if (whisperList.length === 0) {\n    return null;\n  }\n\n  const dropDownItems = whisperList.map((text, i) => (\n    <Dropdown.Item eventKey=\"2\" key={i} onClick={() => onClick(text)}>\n      {text}\n    </Dropdown.Item>\n  ));\n\n  return (\n    <Dropdown.Menu show>\n      <Dropdown.Header>Do you mean</Dropdown.Header>\n      {dropDownItems}\n    </Dropdown.Menu>\n  );\n}\n","import { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { whisper } from \"./api\";\nimport WhisperList from \"./WhisperList\";\n\ninterface SearchFormProps {\n  onChange: (_: string) => void;\n  onFail: (e: any) => void;\n  value: string;\n  placeholder?: string | undefined;\n}\n\nexport default function FormControlWhisperer({\n  onChange,\n  onFail,\n  value,\n  placeholder,\n}: SearchFormProps): JSX.Element {\n  const [whisperList, setWhisperList] = useState<string[]>([]);\n\n  const _onChange = (e: any) => {\n    onChange(e.target.value);\n\n    if (e.target.value === \"\") {\n      setWhisperList([]);\n    } else {\n      whisper(\n        e.target.value,\n        (l) => setWhisperList(l),\n        (e) => onFail(e)\n      );\n    }\n  };\n\n  const onWhisperSelect = (value: string) => {\n    setWhisperList([]);\n    onChange(value);\n  };\n\n  return (\n    <>\n      <Form.Control\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={_onChange}\n        onKeyDown={(e) => {\n          if (e.key === \"Escape\") {\n            setWhisperList([]);\n          }\n        }}\n      />\n      <WhisperList whisperList={whisperList} onClick={onWhisperSelect} />\n    </>\n  );\n}\n","import * as E from 'fp-ts/Either';\nimport * as D from 'io-ts/Decoder';\n\nimport { BACKEND_URL_STORAGE_KEY } from \"./Settings\";\nimport axios from \"axios\";\nimport { SearchResponseList, searchResponseListDecoder } from \"./SearchResponseModelDecoder\";\n\nexport function search(\n  origin: string,\n  destination: string,\n  departure: string,\n  onSuccess: (response: E.Either<D.DecodeError, SearchResponseList>) => void,\n  onFail: (e: any) => void\n): void {\n  const data = { origin, destination, departure };\n  const apiUrl = window.localStorage.getItem(BACKEND_URL_STORAGE_KEY);\n\n  axios\n    .get(`${apiUrl}/search`, {\n      headers: { accept: \"application/json\" },\n      params: data,\n    })\n    .then((res) => onSuccess(searchResponseListDecoder.decode(res.data)))\n    .catch((e) => onFail(e));\n}\n\nexport function whisper(\n  text: string,\n  onSuccess: (response: string[]) => void,\n  onFail: (e: any) => void\n): void {\n  const data = { text };\n  const apiUrl = window.localStorage.getItem(BACKEND_URL_STORAGE_KEY);\n\n  axios\n    .get(`${apiUrl}/whisper`, {\n      headers: { accept: \"application/json\" },\n      params: data,\n    })\n    .then((res) => onSuccess(res.data))\n    .catch((e) => onFail(e));\n}\n","import { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { ButtonVariant } from \"react-bootstrap/esm/types\";\nimport FormControlWhisperer from \"./FormControlWhisperer\";\n\ninterface SearchFormProps {\n  onSubmit: (origin: string, destination: string, departure: string) => void;\n  origin: string;\n  setOrigin: (_: string) => void;\n  destination: string;\n  setDestination: (_: string) => void;\n  departure: string;\n  setDeparture: (_: string) => void;\n  fetchInProgress: boolean;\n  onWhisperFail: (e: any) => void;\n}\n\nexport default function SearchForm({\n  onSubmit,\n  origin,\n  setOrigin,\n  destination,\n  setDestination,\n  departure,\n  setDeparture,\n  fetchInProgress,\n  onWhisperFail,\n}: SearchFormProps): JSX.Element {\n  const buttonText = fetchInProgress ? \"Fetching...\" : \"Search\";\n  const buttonVariant: ButtonVariant = fetchInProgress\n    ? \"outline-success\"\n    : \"success\";\n\n  return (\n    <Form>\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"origin\">\n        <Form.Label column sm=\"2\">\n          Origin\n        </Form.Label>\n        <Col sm=\"10\">\n          <FormControlWhisperer\n            onFail={onWhisperFail}\n            value={origin}\n            onChange={(value) => setOrigin(value)}\n            placeholder=\"origin\"\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"destination\">\n        <Form.Label column sm=\"2\">\n          Destination\n        </Form.Label>\n        <Col sm=\"10\">\n          <FormControlWhisperer\n            onFail={onWhisperFail}\n            value={destination}\n            onChange={(value) => setDestination(value)}\n            placeholder=\"destination\"\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"departure\">\n        <Form.Label column sm=\"2\">\n          Departure\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            type=\"date\"\n            placeholder=\"Departure\"\n            value={departure}\n            onChange={(e) => setDeparture(e.target.value)}\n          />\n        </Col>\n      </Form.Group>\n\n      <Button\n        variant={buttonVariant}\n        type=\"button\"\n        onClick={() => onSubmit(origin, destination, departure)}\n      >\n        {buttonText}\n      </Button>\n    </Form>\n  );\n}\n","import { SearchResponseItem } from \"./SearchResponseModelDecoder\";\n\ninterface OfferProps {\n  offer: SearchResponseItem;\n}\n\nexport default function Offer({ offer }: OfferProps) {\n  return (\n    <div className=\"offer-block\">\n      <h1>\n        {offer.origin} - {offer.destination} ({offer.departure})\n      </h1>\n      <p>\n      Departure: {offer.departure} <br/>\n      Arrival: {offer.arrival} <br/>\n      From: {offer.origin} <br/>\n      To: {offer.destination}\n      </p>\n    </div>\n  );\n}\n","import Offer from \"./Offer\";\nimport { SearchResponseItem } from \"./SearchResponseModelDecoder\";\n\ninterface OffersProps {\n  offers: SearchResponseItem[] | null;\n}\n\nexport default function Offers({ offers }: OffersProps): JSX.Element {\n  if (offers == null) {\n    return <div>Nothing there yet</div>;\n  }\n\n  const elements = offers.map((offer: SearchResponseItem) => (\n    <Offer offer={offer} />\n  ));\n\n  return (\n    <div>\n      <img src=\"banana-dance-dancing-banana.gif\" alt=\"Milan je dement\" />\n      {elements}\n    </div>\n  );\n}\n","interface LizardProps {\n    position: number\n}\n\nexport default function Lizard({position}: LizardProps) {\n    return (\n        <div id=\"barcelona\"\n             style={{backgroundImage: \"url('./lizard2.png')\",\n                 backgroundSize: \"cover\",\n                 animationPlayState: position ? 'running' : 'paused',\n                 display: position ? 'inline-block' : 'none',\n                 top: position\n        }}>\n\n        </div>\n    );\n}\n","import { DepthOfFieldSnowfall } from \"react-snowflakes\";\n\nexport default function Snowflakes() {\n  return (\n    <DepthOfFieldSnowfall\n      count={150}\n      style={{\n        // Position must be relative or absolute,\n        // because snowflakes are positioned absolutely.\n        color: \"#fff\",\n        position: \"absolute\",\n        width: \"95%\",\n        height: \"95%\",\n        zIndex: \"-1\",\n        backgroundColor: \"235E6F\",\n      }}\n    />\n  );\n}\n","import { pipe } from 'fp-ts/function';\nimport * as E from 'fp-ts/Either';\nimport * as D from 'io-ts/Decoder';\n\nimport { CSSProperties, useState } from \"react\";\n\nimport \"./App.css\";\nimport \"./Tree.css\";\n\nimport { Alert, Button, Container } from \"react-bootstrap\";\n\nimport { search } from \"./api\";\n\nimport SearchForm from \"./SearchForm\";\nimport Offers from \"./Offers\";\nimport Settings from \"./Settings\";\nimport Lizard from \"./Lizard\";\nimport Snowflakes from \"./Snowflakes\";\nimport { SearchResponseItem } from './SearchResponseModelDecoder';\n\nconst cubeSolveStyle: CSSProperties = {\n  backgroundImage: \"url(./cube.png)\",\n  backgroundPosition: \"0px 0px\",\n};\n\nconst cubeUnsolvedStyle: CSSProperties = {\n  backgroundImage: \"url(./cube.png)\",\n  backgroundPosition: \"0px 40px\",\n};\n\nfunction setMilanTheme() {\n  document.body.style.backgroundImage = \"url(./milan.jpg)\";\n  document.body.style.backgroundSize = \"100% auto\";\n}\n\nfunction setChristmassTheme() {\n  document.body.style.backgroundImage = \"url(./dedove.jpg)\";\n  document.body.style.backgroundSize = \"100% auto\";\n}\n\nfunction setBrnoTheme() {\n  document.body.style.backgroundImage = \"url(./kun.jpeg)\";\n  document.body.style.backgroundSize = \"100% auto\";\n}\n\nfunction setNormalTheme() {\n  document.body.style.backgroundImage = \"\";\n  document.body.style.backgroundColor = \"#fff\";\n}\n\ntype FetchState = \"not-started\" | \"fetching\" | \"success\" | \"failed\";\n\nfunction App() {\n  const [offers, setOffers] = useState<null | SearchResponseItem[]>(null);\n  const [lizardToggle, setLizardToggle] = useState(false);\n  const [christmassEnabled, setChristmassEnabled] = useState(false);\n  const [brnoEnabled, setBrnoEnabled] = useState(false);\n  const [lizardPositions, setLizardPositions] = useState<number[]>([]);\n  const [origin, setOrigin] = useState<string>(\"\");\n  const [destination, setDestination] = useState<string>(\"\");\n  const [departure, setDeparture] = useState<string>(\"\");\n\n  const addLizardIfToggled = () => {\n      if (lizardToggle) addLizard();\n  };\n\n  document.body.onclick = addLizardIfToggled;\n  document.body.onkeydown = addLizardIfToggled;\n\n  const [milan, setMilan] = useState(false);\n\n  const [fetchState, setFetchState] = useState<FetchState>(\"not-started\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  if (christmassEnabled) {\n    setChristmassTheme();\n  } else if (milan) {\n    setMilanTheme();\n  } else if (brnoEnabled) {\n    setBrnoTheme();\n  } else {\n    setNormalTheme();\n  }\n\n  const onSubmit = (\n    origin: string,\n    destination: string,\n    departure: string\n  ): void => {\n    setFetchState(\"fetching\");\n    search(\n      origin,\n      destination,\n      departure,\n      (offers) => {\n        pipe(\n          offers,\n          E.match(\n            (err) => {\n              setOffers([]);\n              setFetchState(\"failed\");\n              setErrorMessage(`Decoding failed: ${D.draw(err)}`);\n            },\n            (offers) => {\n              setOffers(offers);\n              setFetchState(\"success\");\n            }\n          )\n        );\n\n        if (destination.toLowerCase().includes(\"milan\")) {\n          setMilan(true)\n        } else {\n          setMilan(false)\n        }\n      },\n      (e) => {\n        setErrorMessage(`Search failed: ${JSON.stringify(e, null, 2)}`);\n        setFetchState(\"failed\");\n      }\n    );\n  };\n\n  const onWhisperFail = (e: any) =>\n    setErrorMessage(`Whisper failed: ${JSON.stringify(e, null, 2)}`);\n\n  const cubeStyle = christmassEnabled ? cubeSolveStyle : cubeUnsolvedStyle;\n\n  const addLizard = () => {\n      const position = Math.random() * 600 + 20;\n      setLizardPositions(lizardPositions.concat([position]));\n  };\n\n  return (\n    <>\n        {lizardPositions.map((height) => <Lizard position={height}/>)}\n      <div className=\"bg\"></div>\n      <Snowflakes />\n      <div className=\"kiwi-color-top\"></div>\n      <Container>\n        <div className=\"content-wrapper\">\n          <div style={{ margin: \"0 auto\" }}>\n            <h1>Python weekend search</h1>\n          </div>\n\n          <div className=\"navbar\">\n            <img\n              style={{ float: \"left\" }}\n              src=\"https://images.kiwi.com/common/kiwicom-logo.svg\"\n              alt=\"kiwi-banner\"\n            />\n\n            <div style={{ display: \"flex\" }}>\n              <Settings />\n              <div\n                style={cubeStyle}\n                className=\"cube\"\n                onClick={() => setChristmassEnabled(!christmassEnabled)}\n              ></div>\n              <div\n                style={{\n                  backgroundImage: \"url(./brno-dick.png)\",\n                  backgroundPosition: \"0px 40px\",\n                }}\n                className=\"cube\"\n                onClick={() => setBrnoEnabled(!brnoEnabled)}\n              ></div>\n              <div\n                  style={{\n                    backgroundImage: \"url(./barcelona.png)\",\n                    backgroundPosition: \"0px 40px\",\n                  }}\n                  className=\"cube\"\n                  onClick={() => setLizardToggle(!lizardToggle)}\n              ></div>\n            </div>\n          </div>\n\n          <Alert\n            variant=\"danger\"\n            style={{\n              maxHeight: 300,\n              overflowY: \"auto\",\n              display: errorMessage === \"\" ? \"none\" : \"block\",\n            }}\n          >\n            <Button\n              variant=\"danger\"\n              style={{ float: \"right\" }}\n              onClick={() => setErrorMessage(\"\")}\n            >\n              Close\n            </Button>\n            <pre>{errorMessage}</pre>\n          </Alert>\n\n          <div className=\"container-content\">\n            <SearchForm\n              onSubmit={onSubmit}\n              origin={origin}\n              setOrigin={setOrigin}\n              destination={destination}\n              setDestination={setDestination}\n              departure={departure}\n              setDeparture={setDeparture}\n              fetchInProgress={fetchState === \"fetching\"}\n              onWhisperFail={onWhisperFail}\n            />\n            <div style={{ height: 10 }}></div>\n            <Offers offers={offers} />\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}