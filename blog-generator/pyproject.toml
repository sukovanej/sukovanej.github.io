[tool.poetry]
name = "obsidian-generator"
version = "0.1.0"
description = ""
authors = ["Milan Suk"]
packages = [
    { include = "src" },
]

[tool.poetry.dependencies]
python = "^3.10"
marko = "^1.2.1"
python-frontmatter = "^1.0.0"
pydantic = "^1.9.1"

[tool.poetry.dev-dependencies]
black = "^22.6.0"
isort = "^5.10.1"
mypy = "^0.971"
pylint = "^2.14.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
generate = 'src.cli:generate'

[tool.isort]
profile = "black"

[tool.mypy]
strict_optional = "True"
show_error_codes = "True"
show_column_numbers = "True"
warn_no_return = "True"
disallow_any_unimported = "True"
warn_unused_configs = "True"
disallow_any_generics = "True"
disallow_subclassing_any = "True"
disallow_untyped_calls = "True"
disallow_untyped_defs = "True"
disallow_incomplete_defs = "True"
check_untyped_defs = "True"
disallow_untyped_decorators = "True"
no_implicit_optional = "True"
warn_redundant_casts = "True"
warn_return_any = "True"
implicit_reexport = "False"
strict_equality = "True"

[tool.pylint]
disable = [
    "C0116", "C0115", "C0114",  # docstrings
    "R0903"  # too few public methods
]
extension-pkg-whitelist=['pydantic']

[[tool.mypy.overrides]]
module = "frontmatter.*"
ignore_missing_imports = true
