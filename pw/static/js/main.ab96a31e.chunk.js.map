{"version":3,"sources":["Settings.tsx","FormControlWhisperer.tsx","api.ts","SearchForm.tsx","Offer.tsx","Offers.tsx","Snowflakes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BACKEND_URL_STORAGE_KEY","Settings","useState","window","localStorage","getItem","backendUrl","setBackendUrl","show","setShow","Button","variant","onClick","style","marginRight","Modal","onHide","Header","closeButton","Title","Body","Form","Group","className","controlId","Label","Control","type","placeholder","value","onChange","e","target","Footer","setItem","saveSettings","WhisperList","whisperList","length","dropDownItems","map","text","i","Dropdown","Item","eventKey","Menu","FormControlWhisperer","setWhisperList","onSuccess","onFail","data","apiUrl","axios","get","headers","params","then","res","catch","whisper","l","console","log","JSON","stringify","onKeyDown","key","SearchForm","onSubmit","origin","setOrigin","destination","setDestination","departure","setDeparture","fetchInProgress","buttonText","buttonVariant","as","Row","column","sm","Col","Offer","offer","src","alt","marginTop","marginBottom","arrival","Offers","offers","elements","Snowflakes","count","color","position","width","height","zIndex","backgroundColor","App","setOffers","christmassEnabled","setChristmassEnabled","fetchState","setFetchState","errorMessage","setErrorMessage","document","body","backgroundImage","backgroundSize","Container","margin","float","Alert","display","search","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab96a31e.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\n\nexport const BACKEND_URL_STORAGE_KEY = \"backendUrl\";\n\nfunction saveSettings(backendUrl: string): void {\n  window.localStorage.setItem(BACKEND_URL_STORAGE_KEY, backendUrl);\n}\n\nexport default function Settings(): JSX.Element {\n  const [backendUrl, setBackendUrl] = useState<string>(window.localStorage.getItem(BACKEND_URL_STORAGE_KEY) || \"\");\n  const [show, setShow] = useState(false);\n\n  const save = () => {\n    saveSettings(backendUrl);\n    setShow(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={() => setShow(true)} style={{ marginRight: \"15px\" }}>\n        Settings\n      </Button>\n\n      <Modal show={show} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"origin\">\n              <Form.Label>Backend URL</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Origin\"\n                value={backendUrl}\n                onChange={(e) => setBackendUrl(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={save}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Dropdown, Form } from \"react-bootstrap\";\nimport { whisper } from \"./api\";\n\ninterface SearchFormProps {\n  onChange: (_: string) => void;\n  value: string;\n}\n\ninterface WhisperListProps {\n  whisperList: string[];\n  onClick: (_: string) => void;\n}\n\nfunction WhisperList({ whisperList, onClick }: WhisperListProps) {\n  if (whisperList.length === 0) {\n    return null;\n  }\n\n  const dropDownItems = whisperList.map(\n    (text, i) => <Dropdown.Item eventKey=\"2\" key={i} onClick={() => onClick(text)}>{text}</Dropdown.Item>\n  );\n\n  return (\n    <Dropdown.Menu show>\n      <Dropdown.Header>Do you mean</Dropdown.Header>\n      {dropDownItems}\n    </Dropdown.Menu>\n  );\n}\n\nexport default function FormControlWhisperer({ onChange, value }: SearchFormProps): JSX.Element {\n  const [whisperList, setWhisperList] = useState<string[]>([]);\n\n  const _onChange = (e: any) => {\n    onChange(e.target.value);\n\n    if (e.target.value === \"\") {\n      setWhisperList([]);\n    } else {\n      whisper(e.target.value, (l) => setWhisperList(l), (e) => console.log(JSON.stringify(e)));\n    }\n  };\n\n  const onWhisperSelect = (value: string) => {\n    setWhisperList([]);\n    onChange(value);\n  }\n\n  return (\n    <>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Origin\"\n        value={value}\n        onChange={_onChange}\n        onKeyDown={(e) => {\n          if (e.key === \"Escape\") {\n            setWhisperList([]);\n          }\n        }}\n      />\n      <WhisperList whisperList={whisperList} onClick={onWhisperSelect} />\n    </>\n  );\n}\n","import { SearchResponseItem } from \"./models\";\nimport { BACKEND_URL_STORAGE_KEY } from \"./Settings\";\nimport axios from \"axios\";\n\nexport function search(\n  origin: string,\n  destination: string,\n  departure: string,\n  onSuccess: (response: SearchResponseItem[]) => void,\n  onFail: (e: any) => void\n): void {\n  const data = { origin, destination, departure };\n  const apiUrl = window.localStorage.getItem(BACKEND_URL_STORAGE_KEY);\n\n  axios\n    .get(`${apiUrl}/search`, {\n      headers: { \"accept\": \"application/json\" },\n      params: data,\n    })\n    .then((res) => onSuccess(res.data))\n    .catch((e) => onFail(e));\n}\n\nexport function whisper(\n  text: string,\n  onSuccess: (response: string[]) => void,\n  onFail: (e: any) => void\n): void {\n  const data = { text };\n  const apiUrl = window.localStorage.getItem(BACKEND_URL_STORAGE_KEY);\n\n  axios\n    .get(`${apiUrl}/whisper`, {\n      headers: { \"accept\": \"application/json\" },\n      params: data,\n    })\n    .then((res) => onSuccess(res.data))\n    .catch((e) => onFail(e));\n}\n","import { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { ButtonVariant } from \"react-bootstrap/esm/types\";\nimport FormControlWhisperer from \"./FormControlWhisperer\";\n\ninterface SearchFormProps {\n  onSubmit: (\n    origin: string,\n    destination: string,\n    departure: string\n  ) => void;\n  origin: string;\n  setOrigin: (_: string) => void;\n  destination: string;\n  setDestination: (_: string) => void;\n  departure: string;\n  setDeparture: (_: string) => void;\n  fetchInProgress: boolean;\n}\n\nexport default function SearchForm({ onSubmit,\n  origin,\n  setOrigin,\n  destination,\n  setDestination,\n  departure,\n  setDeparture,\n  fetchInProgress,\n}: SearchFormProps): JSX.Element {\n  const buttonText = fetchInProgress ? 'Fetching...' : 'Search';\n  const buttonVariant: ButtonVariant = fetchInProgress ? 'outline-success' : 'success';\n\n  return (\n    <Form>\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"origin\">\n          <Form.Label column sm=\"2\">Origin</Form.Label>\n          <Col sm=\"10\">\n            <FormControlWhisperer value={origin} onChange={(value) => setOrigin(value)} />\n          </Col>\n        </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"destination\">\n        <Form.Label column sm=\"2\">Destination</Form.Label>\n        <Col sm=\"10\">\n          <FormControlWhisperer value={destination} onChange={(value) => setDestination(value)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"departure\">\n        <Form.Label column sm=\"2\">Departure</Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            type=\"datetime-local\"\n            placeholder=\"Departure\"\n            value={departure}\n            onChange={(e) => setDeparture(e.target.value)}\n          />\n        </Col>\n      </Form.Group>\n\n      <Button variant={buttonVariant} type=\"button\" onClick={() => onSubmit(origin, destination, departure)}>\n        {buttonText}\n      </Button>\n    </Form>\n  );\n}\n","import { SearchResponseItem } from \"./models\";\n\ninterface OfferProps {\n  offer: SearchResponseItem;\n}\n\nexport default function Offer({ offer }: OfferProps) {\n  return (\n    <div>\n      <img src=\"delimiter.png\" alt=\"_\" className=\"center\" style={{marginTop: 20, marginBottom: 20}} />\n      <h1>{offer.origin} - {offer.destination}</h1>\n      ({offer.departure} - {offer.arrival})\n    </div>\n  );\n}\n","import { SearchResponseItem } from \"./models\";\n\nimport Offer from \"./Offer\";\n\ninterface OffersProps {\n  offers: SearchResponseItem[] | null;\n}\n\nexport default function Offers({ offers }: OffersProps): JSX.Element {\n  if (offers == null) {\n    return <div>Nothing there yet</div>;\n  }\n\n  const elements = offers.map((offer: SearchResponseItem) => (\n    <Offer offer={offer} />\n  ));\n\n  return <div>{elements}</div>;\n}\n","import { DepthOfFieldSnowfall } from 'react-snowflakes';\n\nexport default function Snowflakes() {\n  return (\n      <DepthOfFieldSnowfall count={150}\n        style={{\n          // Position must be relative or absolute,\n          // because snowflakes are positioned absolutely.\n          color: '#fff',\n          position: 'absolute',\n          width: '95%',\n          height: '95%',\n          zIndex: '-1',\n          backgroundColor: \"235E6F\",\n        }} />\n  );\n}\n","import { useState } from \"react\";\n\nimport \"./App.css\";\nimport \"./Tree.css\";\n\nimport { Alert, Button, Container } from \"react-bootstrap\";\n\nimport { SearchResponseItem } from \"./models\";\n\nimport { search } from \"./api\";\n\nimport SearchForm from \"./SearchForm\";\nimport Offers from \"./Offers\";\nimport Settings from \"./Settings\";\nimport Snowflakes from \"./Snowflakes\";\n\nfunction setChristmassTheme() {\n  document.body.style.backgroundImage = \"url(http://localhost:3000/dedove.jpg)\";\n  document.body.style.backgroundSize = \"100% auto\";\n}\n\nfunction setNormalTheme() {\n  document.body.style.backgroundImage = \"\";\n  document.body.style.backgroundColor = \"#fff\";\n}\n\ntype FetchState = \"not-started\" | \"fetching\" | \"success\" | \"failed\";\n\nfunction App() {\n  const [offers, setOffers] = useState<null | SearchResponseItem[]>(null);\n  const [christmassEnabled, setChristmassEnabled] = useState(false);\n  const [origin, setOrigin] = useState<string>(\"\");\n  const [destination, setDestination] = useState<string>(\"\");\n  const [departure, setDeparture] = useState<string>(\"\");\n\n  const [fetchState, setFetchState] = useState<FetchState>(\"not-started\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  if (christmassEnabled) {\n    setChristmassTheme();\n  } else {\n    setNormalTheme();\n  }\n\n  const onSubmit = (\n    origin: string,\n    destination: string,\n    departure: string,\n  ): void => {\n    setFetchState(\"fetching\");\n    search(origin, destination, departure, (offers) => {\n      setOffers(offers);\n      setFetchState(\"success\");\n    }, (e) => {\n      setErrorMessage(JSON.stringify(e, null, 2));\n      setFetchState(\"failed\");\n    });\n  };\n\n  return (\n    <>\n      <div className=\"bg\"></div>\n      <Snowflakes />\n      <div className=\"kiwi-color-top\"></div>\n      <Container>\n        <div className=\"content-wrapper\">\n          <div style={{ margin: \"0 auto\"}}>\n            <h1>Python weekend search</h1>\n          </div>\n\n          <div className=\"navbar\">\n            <img style={{ float: \"left\" }} src=\"https://images.kiwi.com/common/kiwicom-logo.svg\" alt=\"kiwi-banner\" />\n\n            <div>\n              <Settings />\n              <img src=\"cube.png\" alt=\"cube\" className=\"tree-btn\" onClick={() => setChristmassEnabled(!christmassEnabled)} />\n            </div>\n          </div>\n\n          <Alert variant=\"danger\" style={{ display: fetchState === \"failed\" ? \"block\" : \"none\" }}>\n            <Button variant=\"danger\" style={{ float: \"right\" }} onClick={() => setFetchState(\"not-started\")}>Close</Button>\n            <pre>{errorMessage}</pre>\n          </Alert>\n\n          <div className=\"container-content\">\n            <SearchForm\n              onSubmit={onSubmit}\n              origin={origin}\n              setOrigin={setOrigin}\n              destination={destination}\n              setDestination={setDestination}\n              departure={departure}\n              setDeparture={setDeparture}\n              fetchInProgress={fetchState === \"fetching\"}\n            />\n            <div style={{ height: 10 }}></div>\n            <Offers offers={offers} />\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}